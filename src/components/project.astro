---
const { title, description, image, index, github, gist } = Astro.props;
import ProjectModal from "./ProjectModal.astro";

const delayStep = 200;
const delayOffset = 100 * "Projects".length + 100;

---

<div class="project-item" data-index={index}>
    <div class="project-card animated bordered" style={{ animationDelay: `${delayOffset + delayStep * index}ms` }}>
		<div class="front animated bordered bg-cover" style={{ backgroundImage: `url(${image})`, animationDelay: `${delayOffset + delayStep * index}ms` }}>
			<div class="w-full h-full flex flex-col justify-center align-middle">
				<h3 class="text-white self-start mx-auto">{title}</h3>
			</div>
		</div>
		<div class="back animated flex flex-col justify-center bordered gap-0.5" style={{ animationDelay: `${delayOffset + delayStep * index}ms` }}>
			<img class="object-cover absolute left-0 top-0 w-full h-full bordered" src={image}>
			<p class="text-white text-center px-2">{description}</p>
			<button class="go-to-project self-center">More info...</button>
			{github && <a href={`https://github.com/${github}`} target="_blank" class="self-center flex flex-row justify-center align-middle">
				github
				<span class="material-symbols-outlined -scale-x-100">
					arrow_outward
				</span>
			</a>}
		</div>
	</div>
	<ProjectModal github={github} index={index} gist={gist}/>
</div>

<style>
	/* Project item */

	.project-item {
		transition: transform 0.75s;
		transform-origin: center;
		aspect-ratio: 32 / 19;
		position: relative;
		padding: 1.5rem;

		--perspective-amount: 1250px;
	}

	/* Project card */

	.project-card {
		animation: flipIn 1s;
		animation-fill-mode: backwards;
		width: 100%;
		height: 100%;
		transform: translateZ(0); /* Forces GPU rendering */
	}

	.project-card {
		transition: box-shadow 0.25s;
	}

	.project-item:hover .project-card {
		box-shadow: 0 0 10px #ad6ed1;
	}

	.project-card {
		transition: transform 0.75s, box-shadow 0.25s;
		transform-origin: center;
	}

	.project-item:hover .project-card.transition-allowed {
		transform: perspective(var(--perspective-amount)) rotate3d(0, 1, 0, 180deg);
	}

	/* Front and Back */

	.back, .front {
		animation: linear 1s back;
		transition: z-index 0.75s;
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
	}

	.front, .project-item:hover .project-card.transition-allowed .back {
		z-index: 10;
	}

	.back, .project-item:hover .project-card.transition-allowed .front {
		z-index: 0;
	}

	.back *:not(img) {
		scale: -1 1;
		text-align: center;
	}

	.back {
		animation: back 1s;
	}

	.front {
		animation: front 1s;
	}

	.back img {
		filter: blur(3px) brightness(35%);
		object-position: top;
	}

	/* Other */

	h3 {
		background: radial-gradient(rgba(0, 0, 0, 80%) 25%, rgba(0, 0, 0, 0) 75%);
		padding: 0.5rem 1.25rem 0.5rem 1.25rem;
		text-align: center;
	}

	.bordered {
		border-radius: 1rem;
	}

	/* Button */

	.go-to-project {
		background-image: linear-gradient(to right, transparent 0%, rgba(255, 255, 255, 20%) 10%, rgba(255, 255, 255, 20%) 90%, transparent 100%);
		background-size: 0% 100%;
		background-repeat: no-repeat;
		background-position: center;
		transition: background-size 0.3s;

		padding: 0.1rem 1rem;
	}

	.go-to-project:hover {
		background-size: 100% 100%;
	}

	.go-to-project:active {
		background-image: linear-gradient(to right, transparent 0%, white 10%, white 90%, transparent 100%);
	}

	/* link */

	a {
		background-image: linear-gradient(to right, transparent 0%, var(--purple) 10%, var(--purple) 90%, transparent 100%);
		background-size: 0% 10%;
		background-repeat: no-repeat;
		background-position: bottom;

		padding-bottom: 0.25rem;
	}

	a, a span {
		transition: background-size 0.3s, color 0.3s;
	}

	a:hover {
		background-size: 100% 10%;
	}

	a:hover span, a:hover {
		color: var(--purple);
	}

	a:active {
		background-image: linear-gradient(to right, transparent 0%, white 10%, white 90%, transparent 100%);
		color: white;
	}

	a:active span {
		color: white;
	}

	/* Animations */

	@keyframes flipIn {
		0% {
			transform: perspective(var(--perspective-amount)) rotate3d(0, 1, 0, 90deg);
		}

		100% {
			transform: perspective(var(--perspective-amount)) rotate3d(0, 1, 0, 0deg);
		}
	}

	@keyframes front {
		0% {
			z-index: 10;
		}

		100% {
			z-index: 10;
		}
	}

	@keyframes back {
		0% {
			z-index: 0;
		}

		100% {
			z-index: 0;
		}
	}
</style>

<script define:vars={{index}}>
	const this_modal = document.querySelector(`.project-modal[data-index="${index}"]`);

	$(`.project-item[data-index="${index}"]`).find("button.go-to-project").on("click", function() {
		$(this_modal)
			.css("display", "flex")
			.css("height", "0")
			.animate({
				height: "100vh",
			}, 750);

		// $(`.project-modal:not([data-index="${index}"])`).hide();
	});
</script>